<project default="main">
	<!-- Required to use tasks from ant-contrib -->
	<taskdef resource="net/sf/antcontrib/antcontrib.properties"/>

	<property file="build.properties"/>
	
	<!-- runs the batch validation for specified directory -->
	<target name="validate">
		<path id="batchValidator.classpath">
			<pathelement location="${batchValidator.classpathDir}" />
			<pathelement location="${batchValidator.jarDir}/isorelax.jar" />
			<pathelement location="${batchValidator.jarDir}/msv.jar" />
			<pathelement location="${batchValidator.jarDir}/relaxngDatatype.jar" />
			<pathelement location="${batchValidator.jarDir}/xercesImpl.jar" />
			<pathelement location="${batchValidator.jarDir}/xmlParserAPIs.jar" />
			<pathelement location="${batchValidator.jarDir}/xsdlib.jar" />
		</path>
		
		<java  classname="${batchValidator.Class}"
				classpathref="batchValidator.classpath" fork="true" >
			<arg value="${schemFile}" />
			<arg value="${xmlFileDir}" />
			<!--arg value="${filter}"/--> <!-- optional -->
		</java>
	</target>
	
	<!-- runs XSLT transformation on every file in the specified directory (respecting the filter give)
	results are generated to the specified subdirectory -->
	<target name="transform">
		<path id="batchTransform.classpath">
			<pathelement location="${batchTransform.classpathDir}" />
			<pathelement location="${batchTransform.saxonJar}" />
		</path>
		<java classname="${batchTransform.Class}" classpathref="batchTransform.classpath" fork="true">
			<arg value="${style}"/>
			<arg value="${xmlFileDir}" />
			<arg value="${outputExtension}" />
			<arg value="generated" />  <!-- output directory, relative to input, optional -->
			<arg value="${batchTransform.filter}" /><!-- optional -->
		</java>
	</target>

	<!--transform one file - not used but keep it to know the syntax-->
	<target name="transformFile">
		<!-- java -jar  d:\kuba\_prog\saxon8-8j\saxon8.jar -o pic.svg gr.xml use_msgr2svg.xsl-->
		<java  jar="${saxonJar}" fork="true" >
			<arg value="${inputFile}" />
			<arg value="${style}"/>
		</java>
	</target>

	<!-- Given a base directory and its two subdirectories creates a file comaparing pictures (respecting the given filter)
	from both subdirectories in a single HTML file -->
	<target name="createComparison">
		<path id="createComparison.classpath">
			<pathelement location="${createComparison.classpathDir}" />
		</path>
		<java classname="${createComparison.Class}" classpathref="createComparison.classpath">
			<arg value="${outputFile}" />
			<arg value="${generatedSubdir}"/>
			<arg value="${templatesSubdir}"/>
			<arg value="${createComparison.filter}"/> <!-- optional -->
		</java>
	</target>
	
	
	<target name="generatePngFromSvg">
		<!-- TODO directory or more files -->
		<!-- TODO size of a picture / ration -->
		<exec executable="${generatePng.inkscape}">
			<arg value="-f"/>
			<arg value="${svgFile}"/>
			<arg value="-e"/>
			<arg value="${svgFile}${pngFileExtension}"/>
			<arg value="-b"/>
			<arg value="white"/>
			<arg value="-d"/>
			<arg value="200"/>
		</exec>
	</target>
	
	<!-- recursively go through all directories in a given file and 
		every file with .svg extension will transform to .png (to the same directory).-->
	<target name="generatePng">
		<foreach target="generatePngFromSvg" param="svgFile"> 
			<param name="pngFileExtension" value=".png"/>
			<path>  
				<fileset dir="${generatePng.dir}">  
					<include name="**/*.svg"/>  
				</fileset>  
			</path>  
		</foreach>  
	</target>
	
	<!-- bulk targets -->
	<target name="validateAll">
		<antcall target="validate">
			<param name="schemFile" value="..\scripts\osgr.rng"/>
			<param name="xmlFileDir" value="e2e\osgr"/>
		</antcall>
		<antcall target="validate">
			<param name="schemFile" value="..\scripts\msgr.rng"/>
			<param name="xmlFileDir" value="e2e\msgr"/>
		</antcall>
		<antcall target="validate">
			<param name="schemFile" value="..\scripts\xygr.rng"/>
			<param name="xmlFileDir" value="e2e\xygr"/>
		</antcall>
	</target>
	
	<target name="testOsgr">
		<antcall target="transform">
			<param name="style" value="..\scripts\graph2svg.xsl"/>
			<param name="xmlFileDir" value="e2e\osgr"/>
			<param name="outputExtension" value="svg"/>
		</antcall>

		<antcall target="createComparison">
			<param name="outputFile" value="e2e\osgr\comparison.html"/>
			<param name="generatedSubdir" value="generated"/>
			<param name="templatesSubdir" value="templates"/>
		</antcall>
	</target>
	
	<target name="testMsgr">
		<antcall target="transform">
			<param name="style" value="..\scripts\graph2svg.xsl"/>
			<param name="xmlFileDir" value="e2e\msgr"/>
			<param name="outputExtension" value="svg"/>
		</antcall>

		<antcall target="createComparison">
			<param name="outputFile" value="e2e\msgr\comparison.html"/>
			<param name="generatedSubdir" value="generated"/>
			<param name="templatesSubdir" value="templates"/>
		</antcall>
	</target>
	
	<target name="testXygr">
		<antcall target="transform">
			<param name="style" value="..\scripts\graph2svg.xsl"/>
			<param name="xmlFileDir" value="e2e\xygr"/>
			<param name="outputExtension" value="svg"/>
		</antcall>

		<antcall target="createComparison">
			<param name="outputFile" value="e2e\xygr\comparison.html"/>
			<param name="generatedSubdir" value="generated"/>
			<param name="templatesSubdir" value="templates"/>
		</antcall>
	</target>

	<target name="main">
		<antcall target="validateAll"/>
		
		<antcall target="testOsgr"/>
		<antcall target="testMsgr"/>
		<antcall target="testXygr"/>
	</target>

</project>
